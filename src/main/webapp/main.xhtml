<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
	  xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets" >

<h:head>
    <Title>Главная страница</Title>
    <script type="text/javascript">
    	function areaClick(mouseEvent) {

    		var rd = document.getElementById("mainform:r");
    		var r = 1;

    		if(rd != null){
    			r = rd.value;
    			// alert("r set to:" + r);
    		} else {
    			alert("rd is null");
    		}

    		var gr = document.getElementById("graph");
    		if(gr == null){
    			alert("graph is null");
    		} else {
    			// alert("graph clh" + gr.clientHeight);
    		}


    		// alert("msx:" + mouseEvent.pageX);
    		// alert("msy:" + mouseEvent.pageY);

    		var x = 221/80*r*((mouseEvent.pageX - getLeftOffset(document.getElementById("graph")))/document.getElementById("graph").clientWidth - 0.5 );
    		var y = 221/80*r*(( mouseEvent.pageY - getTopOffset(document.getElementById("graph")))/document.getElementById("graph").clientHeight - 0.5 );
    		// alert("x" + x);
    		// alert("y" + y);

    		mx = document.getElementById("submit:mx");
    		mx.value = x;

    		my = document.getElementById("submit:my");
    		my.value = -y;

    		var btn = document.getElementById("submit");
    		btn.click();
    	}
    	function getTopOffset(elem) {
    		var curtop = 0;
    		var curtopscroll = 0;
    		if (elem.offsetParent) {
    			do {
    				curtop += elem.offsetTop;
    				curtopscroll += elem.offsetParent ? elem.offsetParent.scrollTop : 0;
    			} while (elem = elem.offsetParent);

    			return(curtop - curtopscroll);
    		}
    	}
    	function getLeftOffset(elem) {
    		var curtop = 0;
    		var curtopscroll = 0;
    		if (elem.offsetParent) {
    			do {
    				curtop += elem.offsetLeft;
    				curtopscroll += elem.offsetParent ? elem.offsetParent.scrollLeft : 0;
    			} while (elem = elem.offsetParent);
    			return(curtop - curtopscroll);
    		}
    	}
    </script>
</h:head>
<f:view>
    <h:form>
         <h:commandButton value="#{myBean.val}" action="#{myBean.action()}"/>
    </h:form>

    <h:graphicImage url="data:image/jpg;base64,#{areaChecker.img}" id="graph" onclick="areaClick(event)" >
    </h:graphicImage>
    <h:form id="submit">
        <h:inputHidden  id="mx" value="#{areaChecker.mx}"/>
        <h:inputHidden  id="my" value="#{areaChecker.my}"/>
        <f:ajax event="click" execute="mx my" render=":graph :mainform:r :mainform:or :mainform:panelfor:" listener="#{areaChecker.clickListener}" />
    </h:form>
    
    <h:form id="mainform">
    
        <div>R:
	        <p:spinner id="spr" value="#{input.r}" stepFactor="0.5" min="1" max="3">
	        	<p:ajax event="valueChange" update="@this or :graph" render=":graph :mainform:r :mainform:or :mainform:panelfor:" process="@this" />
	        </p:spinner>
	        <h:outputText id="or" value="#{input.r}"/>
	        <h:inputHidden  id="r" value="#{input.r}"/>
        </div>
        <div>X = 
        	<h:outputText id="x" value="#{input.x}" />

        	<br></br>
        	
	        <h:commandLink value = "-3" action="#{input.setX(-3)}">
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "-2" action="#{input.setX(-2)}">
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "-1" action="#{input.setX(-1)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "0" action="#{input.setX(0)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "1" action="#{input.setX(1)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "2" action="#{input.setX(2)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "3" action="#{input.setX(3)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "4" action="#{input.setX(4)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>
	        <h:commandLink value = "5" action="#{input.setX(5)}"> 
	        	<f:ajax execute="x" render="x"/>
	        </h:commandLink>	        
        </div>
        <div>Y(-5..5):
            <h:inputText id="yIn" value="#{input.y}" validatorMessage="Out of range!">
                <f:validateDoubleRange minimum="-5.0" maximum="5.0" for="yIn" />
            </h:inputText>
            <h:message for="yIn" style="color:red"/>
        </div>

        <div>
        <h:commandButton value="Добавить" action="#{areaChecker.submitHandler}">
            <f:ajax execute="yIn x" render=":graph :mainform:r :mainform:or :mainform:panelfor: mainform"/>
        </h:commandButton>
        </div>

        <div>
        <h:commandButton value="Назад!" action="index"/>
        </div>

        <div>
        <h:commandButton value="Очистить" action="#{areaChecker.reset}">
            <f:ajax render=":graph :mainform:panelfor:" />
        </h:commandButton>
        </div>

        <h:panelGroup id="panelfor">
            <h:dataTable id="resultTable" value="#{areaChecker.points}" var="p">
                <h:column>
                    <f:facet name="header" >X</f:facet>
                    #{p.x}
                </h:column>
                <h:column>
                    <f:facet name="header" >Y</f:facet>
                    #{p.y}
                </h:column>
                <h:column>
                    <f:facet name="header">R</f:facet>
                    #{AreaChecker.r}
                </h:column>
                <h:column>
                    <f:facet name="header">Вхождение</f:facet>
                    #{p.included}
                </h:column>
            </h:dataTable>
        </h:panelGroup>
    </h:form>
</f:view>
</html>
